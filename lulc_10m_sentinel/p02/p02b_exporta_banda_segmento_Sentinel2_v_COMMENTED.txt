var imageVisParam = {"opacity":1,"bands":["ndvi_amp"],"min":722.4200000000001,"max":19606.58,"palette":["137b01","03c40b","34ff04","f9ff00","ffa802","ff2b06","b41503"]},
    limite_mos = 
    /* color: #999900 */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-55.705076478947916, -20.867574198713246],
          [-55.661131166447916, -30.05819301720953],
          [-49.728513978947916, -30.096221129959897],
          [-41.70430956760767, -23.283249613458235],
          [-39.18163897894792, -19.796203502847412],
          [-34.30370929144792, -7.480708436558984],
          [-34.75290163149378, -4.8062408612674385],
          [-36.29098756899377, -4.718653688243107],
          [-45.16794069399377, -17.077670802322864],
          [-52.50680788149377, -16.951605350193674]]]);

// Define the visualization parameters for NDVI amplitude
var imageVisParam = {"opacity":1,"bands":["ndvi_amp"],"min":700,"max":10000,"palette":["137b01","03c40b","34ff04","f9ff00","ffa802","ff2b06","b41503"]}

// Define the years for which to process data
var anos = [2016,2017,2018,2019,2020,2021,2022,2023]
//var anos = [1985,2023];

// Define the visualization parameters for the median composites
var visParMedian2 = {bands: ['swir1_median', 'nir_median', 'red_median'],gain: [0.08, 0.06, 0.2],gamma: 0.85}

// Define the biome
var bioma = "MATAATLANTICA";

// Define the asset path for the mosaics
var asset = 'projects/mapbiomas-mosaics/assets/SENTINEL/BRAZIL/mosaics-3';

// Import the function to add indices for the Caatinga biome
var addIndexCaatinga = require('users/marcosrosaUSP/MapBiomas_col9_MataAtlan:Mata_Atlantica_SENTINEL2/processa_Bandas_Sentinel2_CAATINGA');

// Define the output directory
var dirout = 'projects/mapbiomas-workspace/AMOSTRAS/S2_2024/MATA_ATLANTICA/';

// Loop over the years
for (var i_ano=0;i_ano<anos.length; i_ano++){
  // Get the current year
  var ano = anos[i_ano];

  // Filter the mosaic collection for the current year and biome
  var collection = ee.ImageCollection(asset)
        .filter(ee.Filter.eq('version', '3'))
        .filter(ee.Filter.eq('year', ano))
        .filter(ee.Filter.inList('biome', [
            'MATAATLANTICA',
        ])); 
  // Create a mosaic from the filtered collection
  var mosaicoTotal = collection.mosaic()
  // Add indices for the Caatinga biome
  mosaicoTotal = addIndexCaatinga.get(mosaicoTotal);

//  print(mosaicoTotal)
  // Apply the SNIC algorithm to the image.
  var snic = ee.Algorithms.Image.Segmentation.SNIC({
    image: mosaicoTotal.select(['ndvi_median_dry','ndvi_median_wet',
    'ndwi_median','green_median_texture']),
    size: 20,
    compactness: 0.4,
    connectivity: 8,
  });
  
  // Display the clusters.
  Map.addLayer(snic.randomVisualizer(), null, 'Clusters');

  // If this is the first year, initialize the mosaic image
  if (i_ano == 0){ var mosaicoMA = snic.select(
    ["clusters",
  'ndvi_median_dry_mean','ndvi_median_wet_mean',
    'ndwi_median_mean','green_median_texture_mean'],
    ["clusters_"+ano,
    'ndvi_median_dry_'+ano,'ndvi_median_wet_'+ano,
    'ndwi_median_'+ano,'green_median_texture_'+ano])
                  }
  // Otherwise, add the clusters and indices for the current year to the existing mosaic image
  else {mosaicoMA = mosaicoMA.addBands(snic.select(
    ["clusters",
  'ndvi_median_dry_mean','ndvi_median_wet_mean',
    'ndwi_median_mean','green_median_texture_mean'],
    ["clusters_"+ano,
    'ndvi_median_dry_'+ano,'ndvi_median_wet_'+ano,
    'ndwi_median_'+ano,'green_median_texture_'+ano]))
       }
}

// Print the mosaic image
print(mosaicoMA)

// Export the mosaic image to an asset
Export.image.toAsset({
  "image": mosaicoMA,
  "description": 'mosaicos_MA_S2_clusters_2106_2023',
  "assetId": dirout+'mosaicos_MA_S2_clusters_2106_2023',
  "scale": 10,
  "pyramidingPolicy": {
      '.default': 'mode'
  },
  "maxPixels": 1e13,
  "region": limite_mos
});
