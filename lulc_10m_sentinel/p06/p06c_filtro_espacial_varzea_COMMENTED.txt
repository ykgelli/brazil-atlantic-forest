var geometry = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-56.05851880152852, -30.04613371617718],
          [-49.20305005152852, -30.841736663987348],
          [-41.46867505152852, -23.861579784474333],
          [-34.17375317652852, -8.163484389272043],
          [-34.26164380152852, -4.801825741437062],
          [-35.66789380152852, -4.582835761516412],
          [-49.07121411402852, -16.947367124654484],
          [-56.10246411402852, -21.01873071079243]]]);

// Define the biome
var bioma = "MATAATLANTICA";

// Define the input and output versions
var vesion_in = '10';
var versao_out = '11';

// Define the minimum number of connected pixels
var min_connect_pixel = 40;

// Define the input and output prefixes
var prefixo_in = 'MA_S2_p05_varzea_v';
var prefixo_out = 'MA_S2_p06_varzea_v';

// Define the output directory
var dirout = 'projects/mapbiomas-workspace/COLECAO9/classificacao-ma-S2/';

// Load the input classification image
var class4GAP = ee.Image(dirout+prefixo_in+vesion_in);//.mask(bioma250mil_MA)
print(class4GAP);

////*************************************************************
// Do not Change from these lines
////*************************************************************

//var biomes = ee.Image('projects/mapbiomas-workspace/AUXILIAR/biomas-raster-41');
//var bioma250mil_MA = biomes.mask(biomes.eq(2));
//Map.addLayer(bioma250mil_MA,{'palette': 'ccffcc'}, 'bioma250mil_MA', false)

// Load the palettes
var palettes = require('users/mapbiomas/modules:Palettes.js');
var pal = palettes.get('classification2');

// Define the visualization parameters
var vis = {
      bands: 'classification_2021',
    'min': 0,
    'max': 68,
    'palette': palettes.get('classification9')
    };
var vis2 = {
    'min': 0,
    'max': 68,
    'palette': palettes.get('classification9')
};

// Add the input classification image to the map
Map.addLayer(class4GAP, vis, 'class4GAP');

// Define the years to process
var anos = ['2016','2017','2018','2019','2020','2021', '2022','2023'];
//var anos = ['1985']

// Loop through the years
for (var i_ano=0;i_ano<anos.length; i_ano++){  
  // Get the current year
  var ano = anos[i_ano]; 
  
  // Apply a focal mode filter to the classification image
  var moda = class4GAP.select('classification_'+ano).focal_mode(3, 'square', 'pixels')
  
  // Mask the classification image based on the minimum number of connected pixels
  moda = moda.mask(class4GAP.select('classification_'+ano+'_conn').lte(min_connect_pixel))
  
  // Blend the original classification image with the filtered image
  var class_out = class4GAP.select('classification_'+ano).blend(moda)
  
  // Combine the output images for each year
  if (i_ano == 0){ var class_outTotal = class_out }  
  else {class_outTotal = class_outTotal.addBands(class_out); }
}

// Print the combined output image
print(class_outTotal)

// Add the combined output image to the map
Map.addLayer(class_outTotal, vis, 'class_outTotal');
// Map.addLayer(class_out2, vis, 'class_out2');

// Set the metadata for the output image
class_outTotal = class_outTotal
.set('territory', 'BRAZIL')
.set('biome', 'MATA ATÃ‚NTICA')
.set('source', 'arcplan')
.set('version', versao_out)
.set('year', versao_out)
.set('collection_id', 2)

// Export the output image to an asset
Export.image.toAsset({
    'image': class_outTotal,
    'description': prefixo_out+versao_out,
    'assetId': dirout+prefixo_out+versao_out,
    'pyramidingPolicy': {
        '.default': 'mode'
    },
    'region': geometry,
    'scale': 10,
    'maxPixels': 1e13
});
